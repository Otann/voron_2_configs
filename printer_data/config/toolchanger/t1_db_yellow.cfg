# Secondary tool for klipper-toolchanger

[mcu t1_sht36]
canbus_uuid: 4142c04c6418

[board_pins t1_sht36]
mcu: t1_sht36
aliases:
aliases_2209:
  EXT_EN=PA15,EXT_STEP=PB4,EXT_DIR=PB3,EXT_UART=PB5,EXT_DIAG=PB6
aliases_endstop:
  LIMIT_0=PA1,LIMIT_1=PA2
aliases_probe: 
  PROBE_1=PC15,PROBE_2=PB1
aliases_cnc_fans:
  FAN0=PB10,FAN1=PB11
aliases_thermistors:
  TH0=PA3,PT100=PB12,TC0=PA4
aliases_heaters:
  HE0=PA8
aliases_rgb:
  RGBLED=PB0
aliases_adxl:
  ADXL=PA9


# sb_led just to temporary match with non-stealthchanger config
[neopixel t1_sb_led]
pin: t1_sht36:PB0
chain_count: 3
color_order: GRBW
initial_RED: 0
initial_GREEN: 0
initial_BLUE: 0
initial_WHITE: 0.5


[extruder1]
step_pin: t1_sht36:PB4
dir_pin: t1_sht36:PB3
enable_pin: !t1_sht36:PA15

heater_pin: t1_sht36:PA8
sensor_pin: t1_sht36:PA3
sensor_type: ATC Semitec 104NT-4-R025H42G
pullup_resistor: 4700
# sensor_type: ATC Semitec 104GT-2
# sensor_type: ATC Semitec 104NT-4-R025H42G
# sensor_type: Generic 3950

control: pid
pid_Kp: 41.723
pid_Ki: 10.302
pid_Kd: 42.245

rotation_distance: 22.22
gear_ratio: 50:10
microsteps: 32
nozzle_diameter: 0.400
filament_diameter: 1.750
min_temp: 0
max_temp: 285
min_extrude_temp: 170
pressure_advance: 0.03
pressure_advance_smooth_time: 0.030
max_extrude_only_distance: 150
max_extrude_cross_section: 5    # this is needed for KAMP

[tmc2209 extruder1]
uart_pin: t1_sht36:PB5
diag_pin: t1_sht36:PB6
run_current: 0.5
stealthchop_threshold: 0 # Set to 0 for spreadcycle, avoid using stealthchop on extruder


# [probe]
# ##  Tap Probe
# pin: t1_sht36:PA2
# x_offset: 0
# y_offset: 0
# z_offset: -1.440
# speed: 7.0
# samples: 1
# samples_result: median
# sample_retract_dist: 3.0
# samples_tolerance: 0.006
# samples_tolerance_retries: 3
# activate_gcode:
#     {% set PROBE_TEMP = 150 %}
#     {% set MAX_TEMP = PROBE_TEMP + 5 %}
#     {% set ACTUAL_TEMP = printer.extruder.temperature %}
#     {% set TARGET_TEMP = printer.extruder.target %}

#     {% if TARGET_TEMP > PROBE_TEMP %}
#         { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
#         M109 S{ PROBE_TEMP }
#     {% else %}
#         # Temperature target is already low enough, but nozzle may still be too hot.
#         {% if ACTUAL_TEMP > MAX_TEMP %}
#             { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
#             TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
#         {% endif %}
#     {% endif %}


[heater_fan t1_hotend]
pin: t1_sht36:PB10
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0


[fan_generic t1_fan] ; part cooling fan
pin: t1_sht36:PB11
max_power: 1.0
kick_start_time: 0.5 ; Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.13
cycle_time: 0.010


[temperature_sensor t1_mcu]
sensor_type: temperature_mcu
sensor_mcu: t1_sht36  


[temperature_sensor t1_temp]
## STH36 onboard sensor, supposedly similar to SB2040
sensor_type = Generic 3950
sensor_pin: t1_sht36:PA4 ; TC0
min_temp: 0
max_temp: 100


# [adxl345]
# cs_pin: t1_sht36:PA9
# spi_bus: spi2


# [resonance_tester]
# accel_chip: adxl345
# probe_points: 175, 175, 30
# min_freq: 5
# max_freq: 133
# accel_per_hz: 75
# hz_per_sec: 1


[tool t1]
# toolchanger: toolchanger
  # Which toolchanger this tool belongs to.
extruder: extruder1
  # Name of the extruder to activate when this tool is selected.
  # If not specified, will use parent's extruder.
# extruder_stepper: 
  # Name of extruder stepper to use for filament motion.
  # When set the main extruder is only used for temperature control.
  # Useful for Y type multi extruder hotends.  
fan: t1_fan
  # Name of the fan to use as print cooling fan when this tool is selected.
  # If not set, uses parent fan or does nothing.
detection_pin: t1_sht36:PA2
  # Pin to use for tool presence detection.
tool_number: 1
  # Tool number to register this tool as.
  # When set, creates the T<n> macro and changes M104/M109 T<n> to target this tool.
  # Can be overwritten in runtime using [ASSIGN_TOOL](G-Codes.md#ASSIGN_TOOL) command.
# pickup_gcode:
  # Gcode to run to pick up this tool, if empty, there is no pickup code.
  # The gocode can use `tool` and `toolchanger` variables to access
  # [their status](Status_Reference.md#tool).
# dropoff_gcode:
  # Gcode to run to drop off this tool, if empty, there is no dropoff code.
# gcode_x_offset: 0
# gcode_y_offset: 0
# gcode_z_offset: 0
  # The XYZ gcode offset of the toolhead. If set, overrides offset defined 
  # by the parent. If set, even to 0, indicates the offset on that axis is 
  # relevant for this tool and any adjustments will be attributed to this tool.  
# params_*: 
  # Extra params to pass to pickup/dropoff gcode. Accessible in the gcode via
  # `tool.params_name`.
  # Some example params:
  #  params_dock_x: 10.0
  #  params_dock_y: 50.0
  #  params_input_shaper_freq_x: 100
  #  params_retract_mm: 8 
# t_command_restore_axis: XYZ
   # Which axis to restore with the T<n> command, see SELECT_TOOL for command for more info.