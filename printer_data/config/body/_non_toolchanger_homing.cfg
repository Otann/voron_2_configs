[gcode_macro _HOMED]
description: Ensures that head is homes
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

[gcode_macro _SENSORLESS_HOMING]
variable_home_current: 0.49
gcode:
  M117 This is a config macro for sensorless homing, this doens't do anything
  ; It was 0.7 for X and 1.4 for Y before new gantry and Leadshine motors and for LDO motors
  ; Then is 0.49 before toolchanger reconfiguration
  ; In the example it is 0.5, but I am keeping old value for now to not mess sensitivity
  ; https://github.com/viesturz/klipper-toolchanger/blob/main/examples/z%20probe/per%20tool%20probe/homing.cfg
  

# [gcode_macro _HOME_X]
# variable_home_current: 0.5
# gcode:
#     {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
#     {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}

#     SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro _SENSORLESS_HOMING"].home_current}
#     SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro _SENSORLESS_HOMING"].home_current}

#     ## Move away from rightmost border
#     SET_KINEMATIC_POSITION X=15
#     G91
#     G1 X-15 F1200

#     ## Wait for commands to flush any commands (including stallguard) and then home
#     M400
#     G28 X

#     ## Move away
#     G91
#     G1 X-15 F1200
    
#     G4 P2000  # Wait 2 seconds… (give StallGuard registers time to clear).  You may need to give this more time if it's not reliable.

#     ##  Set the current back to what's in the printer.cfg file. 
#     SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
#     SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}


# [gcode_macro _HOME_Y]
# gcode:
#     {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
#     {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}

#     SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro _SENSORLESS_HOMING"].home_current}
#     SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer["gcode_macro _SENSORLESS_HOMING"].home_current}

#     ## Move away from rightmost border
#     SET_KINEMATIC_POSITION Y=15
#     G91
#     G1 Y-15 F1200

#     ## Wait for commands to flush any commands (including stallguard) and then home
#     M400
#     G28 Y

#     # Move away so the x-axis is no longer touching the back of the gantry
#     G91
#     G1 Y-15 F1200

#     G4 P2000  # Wait 2 seconds… (give StallGuard registers time to clear).  You may need to give this more time if it's not reliable.

#     ##  Set the current back to what's in the printer.cfg file. 
#     SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
#     SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}


[gcode_macro LOCK_Z_MOTORS]
description: Lock motors in place without homing
gcode:
  SET_STEPPER_ENABLE STEPPER=stepper_z  ENABLE=1
  SET_STEPPER_ENABLE STEPPER=stepper_z1 ENABLE=1
  SET_STEPPER_ENABLE STEPPER=stepper_z2 ENABLE=1
  SET_STEPPER_ENABLE STEPPER=stepper_z3 ENABLE=1


[homing_override]
axes: xyz
gcode:
  INITIALIZE_TOOLCHANGER
  # VERIFY_TOOL_DETECTED T=0 # Homing probe is on T0, make sure we are not homing while some other tool is selected

  _LED_STATUS_HOMING
  G90

  # Commented out because gantry sags after print is finished and head moves over purge bucket
  # LOCK_Z_MOTORS # Otherwise gantry sags at the back, because of the bearigns inside Z mounts
  
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'Y' or 'X' in params %}
    # M117 Homing Y
    # _HOME_Y
    G28 Y
  {% endif %}

  {% if home_all or 'X' in params %}
    # M117 Homing X
    # _HOME_X
    G28 X
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    # M117 Homing Y
    G90
    G1 X175 Y175 F12000

    G28 Z   ## Home Z
    G1 Z30 F500    
  {% endif %}
  _LED_STATUS_ACTIVE